import 'dart:io';

/// A utility class for managing file and directory paths used in the distribution process.
///
/// The `Files` class provides static references to commonly used files and directories,
/// such as Android and iOS distribution directories, changelogs, and metadata paths.
///
/// Example usage:
/// ```
/// final changelogFile = Files.androidChangeLogs;
/// final outputDir = Files.androidDistributionOutputDir;
/// ```
class Files {
  /// The file containing Android changelogs.
  static final File androidChangeLogs = File("distribution/android/output/changelogs.log");

  /// The Fastlane JSON configuration file.
  static final File fastlaneJson = File("distribution/fastlane.json");

  /// The root directory for Android distribution files.
  static final Directory androidDistributionDir = Directory("distribution/android");

  /// The directory containing Android app bundles generated by the build process.
  static final Directory androidOutputAppbundles = Directory("build/app/outputs/bundle");

  /// The directory containing Android APKs generated by the build process.
  static final Directory androidOutputApks = Directory("build/app/outputs/flutter-apk");

  /// The output directory for Android distribution files.
  static Directory get androidDistributionOutputDir => Directory("${androidDistributionDir.path}/output");

  /// The metadata directory for Android distribution files.
  static Directory get androidDistributionMetadataDir => Directory("${androidDistributionDir.path}/metadata");

  /// The root directory for iOS distribution files.
  static final Directory iosDistributionDir = Directory("distribution/ios");

  /// The directory containing iOS IPA files generated by the build process.
  static final Directory iosOutputIPA = Directory("build/ios/ipa");

  /// The output directory for iOS distribution files.
  static Directory get iosDistributionOutputDir => Directory("${iosDistributionDir.path}/output");

  /// The metadata directory for iOS distribution files.
  static Directory get iosDistributionMetadataDir => Directory("${iosDistributionDir.path}/metadata");
}
